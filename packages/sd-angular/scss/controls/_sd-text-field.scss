sd-text-field {
  position: relative;
  display: block;

  > input {
    display: block;
    width: 100%;
    border: 1px solid border-color();
    @include padding(sm, default);
    font-size: inherit;
    font-weight: inherit;
    font-family: inherit;
    line-height: inherit;
    color: inherit;
    margin: 0;
    background: #fff;

    &::-webkit-input-placeholder {
      color: text-color(lighter);
    }

    &._type-number {
      text-align: right;
      &::-webkit-inner-spin-button,
      &::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
    }

    &[type=date] {
      padding: padding(sm) - 1 padding(default) padding(sm) - 1 padding(default);
      @media screen and (max-width: $m-screen) {
        padding: m-padding(sm) - 1 m-padding(default) m-padding(sm) - 1 m-padding(default);
      }

      &::-webkit-inner-spin-button,
      &::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
    }

    &:invalid,
    &._error {
      border-left-color: theme-color(danger);
    }

    &:focus {
      border-color: theme-color(primary);
    }

    &._size-sm {
      @include padding(xs, sm);
      @include font-size();

      &[type=date] {
        padding: padding(xs) - 1 padding(sm) padding(xs) padding(sm);
        @media screen and (max-width: $m-screen) {
          padding: m-padding(xs) - 1 m-padding(sm) m-padding(xs) m-padding(sm);
        }
      }
    }

    &._disabled {
      color: text-color(light);
      background: grey(lighter);
    }
  }

  &._inline {
    display: inline-block;
    min-width: auto !important;

    > input {
      display: inline-block;
      width: auto;
    }
  }

  > ._sd-text-field-button-group {
    position: absolute;
    top: 1px;
    right: 1px;

    > sd-button > button {
      border: none;
      border-left: 1px solid grey(lighter);
    }
  }

  > ._size-sm + ._sd-text-field-button-group {
    > sd-button > button {
      @include padding(xs, sm);
      @include font-size();
    }
  }
}