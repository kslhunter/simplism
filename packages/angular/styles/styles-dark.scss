@import "presets/colors";

$primary-theme-color: $color-yellow !default;
$bg-color: #000 !default;
$text-color: (
  dark: #FFF,
  default: #FFF,
  light: rgba(255, 255, 255, .7),
  lighter: rgba(255, 255, 255, .6),
  reverse: (
    default: rgba(0, 0, 0, .7),
    dark: #000
  )
) !default;

$trans-color: (
  darker: rgba(0, 0, 0, .4),
  dark: rgba(0, 0, 0, .2),
  default: rgba(255, 255, 255, .05),
  light: rgba(255, 255, 255, .1),
  lighter: rgba(255, 255, 255, .2),
) !default;

@import "presets/variables";
@import "presets/functions";
@import "presets/mixins";

@import "defaults";
@import "providers/sd-toast";
@import "controls";
@import "classes";

a {
  color: theme-color(primary, default);

  &:hover,
  &:focus {
    color: theme-color(primary, light);
  }
}

::-webkit-scrollbar-track {
  background-color: rgba(255, 255, 255, .1);
}

::-webkit-scrollbar-corner {
  background-color: rgba(255, 255, 255, .2);
}

::-webkit-scrollbar {
  background-color: #FFF;
}

::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, .05);

  border-top: 1px solid get($trans-color, default);
  border-bottom: 1px solid get($trans-color, dark);
}

sd-topbar {
  background: theme-color(bluegrey, darkest);
  color: text-color(default);
  border-bottom: 1px solid get($trans-color, darker);

  > a {
    color: text-color(light);

    &:hover,
    &:focus {
      color: text-color(default);
    }
  }
}

sd-topbar-menu {
  color: text-color(light);
  float: left;

  &:hover {
    background: trans-color(dark);
    color: text-color(default);
  }

  &:active {
    transition: none;
    background: trans-color(darker);
    color: text-color(default);
  }
}

sd-card {
  background: theme-color(bluegrey, darkest);
}

sd-textfield {
  > input,
  > textarea {
    background: trans-color(light);
    border-color: trans-color(light);

    &::-webkit-calendar-picker-indicator {
      background: transparent;
    }

    &:focus {
      outline-color: theme-color(primary, default);
    }

    &:disabled {
      background: trans-color(default);
    }
  }

  > ._invalid-indicator {
    display: none;
  }

  &[sd-inset=true] {
    > input,
    > textarea {
      background: theme-color(info, darkest);
    }
  }
}

sd-button {
  & > button {
    background: transparent;
    color: theme-color(primary, default);
    border: 2px solid get($trans-color, default);

    &:hover {
      background: trans-color(dark);
    }

    &:active {
      background: trans-color(darker);
    }

    &:disabled {
      background: transparent;
      color: text-color(default);
    }

    &:focus {
      border: 2px solid theme-color(primary, dark) !important;
    }
  }

  @each $theme, $colors in $theme-color {
    &[sd-theme=#{$theme}] > button {
      background: transparent;
      border-color: get($colors, default);
      color: get($colors, default);
      font-weight: bold;

      &:hover {
        background: get($colors, default);
        border-color: get($colors, default);
        color: get($text-color, reverse, default);
      }

      &:active {
        background: get($colors, dark);
        border-color: get($colors, dark);
        color: get($text-color, reverse, default);
      }

      &:disabled {
        background: get($theme-color, grey, default);
        border-color: get($theme-color, grey, default);
      }

      &:focus {
        border: 2px solid get($colors, light) !important;
      }
    }
  }

  &[sd-invalid=true] > ._invalid-indicator {
    background: get($theme-color, danger, default);
  }
}

sd-dock {
  background: get($theme-color, bluegrey, darkest);

  &[sd-position=top] {
    border-bottom: 1px solid get($trans-color, darker);
    border-top: 1px solid get($trans-color, default);
  }

  &[sd-position=bottom] {
    border-bottom: 1px solid get($trans-color, darker);
    border-top: 1px solid get($trans-color, default);
  }

  &[sd-position=left] {
    border-left: 1px solid get($trans-color, default);
    border-right: 1px solid get($trans-color, darker);
  }

  &[sd-position=right] {
    border-left: 1px solid get($trans-color, default);
    border-right: 1px solid get($trans-color, darker);
  }

  &[sd-resizable=true] {
    > hr {
      background: trans-color(default);
    }
  }
}

sd-dropdown-popup {
  background: get($theme-color, bluegrey, darkest);
  border: 1px solid get($trans-color, light);

  &:focus {
    outline: 1px solid theme-color(primary, default);
  }
}

sd-sheet {
  background: $bg-color;

  ._head ._col {
    background: theme-color(bluegrey, darkest);
    border-bottom: 1px solid get($trans-color, default);
    border-top: 1px solid get($trans-color, default);

    > ._border {
      border-right: 1px solid get($trans-color, default);
    }
  }

  ._body ._col {
    background: $bg-color;
    border-bottom: 1px solid get($trans-color, lighter);
    border-right: 1px solid get($trans-color, lighter);

    sd-textfield > input {
      background: trans-color(light);
    }

    sd-checkbox > label {
      > ._indicator_rect {
        background: trans-color(light);
      }
    }

    sd-select,
    sd-multi-select {
      > sd-dropdown > div {
        background: trans-color(light);
      }
    }

    > ._focus-indicator {
      outline: 2px solid theme-color(primary, default);
    }
  }

  ._col._first-col {
    background: theme-color(bluegrey, darkest) !important;
    border-bottom: 1px solid get($trans-color, default) !important;
    border-right: 1px solid get($trans-color, default) !important;
  }
}

sd-select {
  > sd-dropdown > div {
    background: trans-color(light);
    border-color: trans-color(light);
  }

  &[sd-disabled=true] > sd-dropdown > div {
    background: $bg-color;
    color: text-color(light);
  }

  &[sd-invalid=true] > sd-dropdown > div > ._invalid-indicator {
    background: get($theme-color, danger, default);
  }
}

sd-select-item {
  display: block;
  padding: gap(xs) gap(sm);
  cursor: pointer;

  &:hover {
    background: trans-color(dark);
  }
}

sd-checkbox {
  > label {
    > ._indicator_rect {
      background: trans-color(light);
    }
  }
}

@each $key, $val in $theme-color {
  @each $key1, $val1 in $val {
    .sd-background-#{$key}-#{$key1} {
      background: $val1 !important;

      @if $key1 != lighter and $key1 != lightest {
        color: text-color(default);

        a {
          color: text-color(light);

          &:hover,
          &:focus {
            color: text-color(default);
          }
        }

        sd-textfield > input {
          background: trans-color(light) !important;
          color: text-color(default) !important;
          border-color: trans-color(light) !important;
        }

        sd-list-item[sd-header=true] > label {
          color: text-color(light) !important;
        }

        sd-checkbox {
          > label {
            color: text-color(light) !important;

            > ._indicator_rect {
              background: trans-color(light) !important;
              border-color: trans-color(light) !important;
            }

            > ._indicator {
              color: text-color(light) !important;
            }
          }

          &[sd-radio=true] {
            > label {
              > ._indicator > div {
                background: text-color(light) !important;
              }
            }
          }
        }
      }
    }
  }
}

sd-sidebar {
  background: theme-color(bluegrey, darkest);
  border-right: 1px solid get($trans-color, dark);
}

sd-list-item {
  > ._child {
    > ._child-content {
      background: rgba(0, 0, 0, .1);
    }
  }

  &[sd-clickable=true] {
    > label {
      &:hover {
        background: rgba(0, 0, 0, .2);
      }
    }
  }

  &[sd-header=true] {
    > label {
      background: transparent !important;
    }

    > ._child > ._child-content {
      background: transparent !important;
    }
  }
}